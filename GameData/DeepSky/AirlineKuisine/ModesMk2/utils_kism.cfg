//Cabin short: Comforts
@PART[dsak_cabin]:NEEDS[Kerbalism,ProfileDefault]:FOR[AirlineKuisine]
{
	//@entryCost = 12000
	@cost = 6400
	@description = Reinventing the classic cabin was a decision met with surprising amounts of approval from C7 Aerospace. Not that C7 was expected to have a problem with the proposal anyway. Now someone came up with the brilliant idea to specify an array of specific internal layouts for the cabin specifically for the goal of effectively making a spaceplane into a livable long-term abode. *Example uses: cupola, game room, den, dining, theater, gym, janitorial, boardroom.
	@tags = _kerbalism
	@MODEL
	{
		@texture,0 = mk2CrewCabin, DeepSky/AirlineKuisine/TexturesMk2/cabin_kism
	}
		
	MODULE:NEEDS[FeatureComfort]
	{
		name = Comfort
		desc = With more windows in the hull and on more sides than the average crew cabin, the Rec Centre provides many more viewing angles to anyone inside.
		bonus = panorama
	}
		
	MODULE:NEEDS[FeatureComfort]
	{
		name = Comfort
		desc = Loaded with various arrangements of gear per instance on the vessel, to provide experiences ranging from home entertainment to body-building to spa.
		bonus = exercise
	}
}

//Cabin long: Comforts
@PART[dsak_cabin2]:NEEDS[Kerbalism,ProfileDefault]:FOR[AirlineKuisine]
{
	//@entryCost = 15000
	@cost = 7200
	@description = As is the case with the short Rec Centre, this one enables crew to make a great or greater home in a spaceplane, but the scope of use is more focused. Staff and clients alike can expect to find truly first class amenities or community facilities and lots of private space here, rather than live in the game room. *Example uses: cupola, apartment, therapy, kitchen, large storage, engineer station.
	@tags = _kerbalism
	@MODEL
	{
		@texture,0 = mk2CrewCabin, DeepSky/AirlineKuisine/TexturesMk2/cabin2_kism
	}
		
	MODULE:NEEDS[FeatureComfort]
	{
		name = Comfort
		desc = With more windows in the hull and on more sides than the average crew cabin, the Rec Centre provides many more viewing angles to anyone inside.
		bonus = panorama
	}
		
	MODULE:NEEDS[FeatureComfort]
	{
		name = Comfort
		desc = Loaded with various arrangements of gear per instance on the vessel, but geared towards mass storage, mass processing (like preparing the buffet for a large crew or cleaning after the crew) and activities which require meditation and even more space.
		bonus = exercise
	}
}

//Processor A: Hydroponics/Greenhouse
@PART[dsak_proc_a]:NEEDS[Kerbalism,ProfileDefault]:FOR[AirlineKuisine]
{
	@entryCost = 18300
	@cost = 2270
	@title = DS Mk2 Inline Greenhouse
	@description = While every other manufacturing company sets out to rightfully invent things to make space travel safer, smarter, and faster, Deep Sky seeks to make space travel overall more enjoyable, homely, and to keep the snack options colorful. In comes this Mk2 sized Greenhouse. It's tailored towards small-sized, fast-growing vegetables and will serve well as a kitchen garden. This greenhouse will be relatively costly to use but can be worthwhile in times of hardship.
	// @tags = _kerbalism
	@MODEL
	{
		@model = Squad/Parts/FuelTank/mk2FuselageShort/FuselageShortLFO
		@texture = mk2FuselageShort, DeepSky/AirlineKuisine/TexturesMk2/processors_kism
	}
	
	MODULE
	{
		name = Greenhouse

		crop_resource = Food                // name of resource produced by harvests
		crop_size = 151.35                  // amount of resource produced by harvests, 23% of standard crop size, volume of 5.5m^3
		crop_rate = 0.0000005144            // growth per-second when all conditions apply, 2.2x faster for 90 day growth cycle. who says you can't grow fast food?
		ec_rate = 1.778                     // EC/s consumed by the lamp at max intensity *2.2 Wendy's bonus + 40% extra

		light_tolerance = 400.0             // minimum lighting flux required for growth, in W/m^2
		pressure_tolerance = 0.1            // minimum pressure required for growth, in sea level atmospheres
		radiation_tolerance = 0.000008333   // maximum radiation allowed for growth in rad/s, considered after shielding is applied

		INPUT_RESOURCE
		{
			name = Ammonia
			rate = 0.00116623               // 15 units required per unit of crop, i.e. 200 days * 3600 seconds per hour * 6 hours * rate *2.2 == 15 * crop_size *2.2 Wendy's bonus
		}

		INPUT_RESOURCE
		{
			name = Water
			rate = 0.000038909              // 0.5 units required per unit of crop, i.e. 200 days * 3600 seconds per hour * 6 hours * rate *2.2 == 0.5 * crop_size *2.2 Wendy's bonus
		}

		INPUT_RESOURCE
		{
			name = WasteAtmosphere          // Plants work on WasteAtmosphere and replace a scrubber, if not enough WasteAtmosphere exists then CO2 is used
			rate = 0.0102876                // Matched to a Kerbals WasteAtmosphere output which is 75% of required CO2 for crops *2.2 Wendy's bonus
		}

		INPUT_RESOURCE
		{
			name = CarbonDioxide            // Kerbals don't provide enough WasteAtmosphere for their required food production. If excess WasteAtmosphere is
                                            // present then it will be used in place of CO2 injection
			rate = 0.00257189               // Remaining 25% of CO2 required *2.2 Wendy's bonus.
		}

		// Note. if there is a deficiency in the amount of WasteAtmosphere needed then the missing amount of WasteAtmosphere will be added to the
		// CarbonDioxide input and Vies Versa if not enough CarbonDioxide is present and there is extra WasteAtmosphere.
		// If there is not enough resources then the plants will suffer.

		OUTPUT_RESOURCE
		{
			name = Oxygen
			rate = 0.01404538               // *2.2 Wendy's bonus
		}
	}

	MODULE
	{
		name = Habitat
		toggle = false
		volume = 7              // The Greenhouse has 5.5 m^3 volume dedicated to food production plus 1.5 for Kerbals working space
		surface = 5.4
	}

	RESOURCE
	{
		name = Ammonia
		amount = 3750
		maxAmount = 3750
	}

	// CarbonDioxide is provided because humans don't provide enough CO2 for their required food production
	RESOURCE
	{
		name = CarbonDioxide
		amount = 36000
		maxAmount = 36000
	}

	// To support the pressure control
	RESOURCE
	{
		name = Nitrogen
		amount = 3800
		maxAmount = 3800
	}

	RESOURCE
	{
		name = Water
		amount = 140
		maxAmount = 140
	}
}

//Processor B: Fuel Cell
@PART[dsak_proc_b]:NEEDS[Kerbalism,ProfileDefault]:FOR[AirlineKuisine]
{
	@entryCost = 13300
	@cost = 3310
	@title = DS Mk2 Inline Fuel Cell Array
	@description = When the going gets tough, the tough get a beefy inline power source. Its output rating exceeds that of two standard fuel cell arrays.
	@tags = _kerbalism
	@MODEL
	{
		@model = Squad/Parts/FuelTank/mk2FuselageShort/FuselageShortLiquid
		@texture = mk2FuselageShort, DeepSky/AirlineKuisine/TexturesMk2/processors_kism
	}
	
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = H2+O2 fuel cell
		capacity = 15
	}

	MODULE
	{
		name = ProcessController
		resource = _MonopropFuelCell
		title = Monoprop+O2 fuel cell
		capacity = 75
	}

	MODULE
	{
		name = Configure
		title = Fuel Cell
		slots = 1

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
		}

		SETUP
		{
			name = Monoprop Oxygen Fuel Cell
			desc = Burns <b>MonoPropellant</b> and <b>Oxygen</b> gas, producing <b>Water</b> and <b>Nitrogen</b> gas as by-products.
			tech = advElectrics

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MonopropFuelCell
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		mtbf = 72576000 // 8y
		extra_cost = 1.0
		extra_mass = 0.5
	}
}

//Processor C: Chemical Plant (ISRU)
@PART[dsak_proc_c]:NEEDS[Kerbalism,ProfileDefault]:FOR[AirlineKuisine]
{
	@entryCost = 6000
	@cost = 3900
	@mass *= 2.1
	@title = DS Mk2 Inline Chemical Plant
	@description = Rather than using the classical cylindrical volume within the Mk2 hull, the entire internal volume is leveraged to contain the essential components of an ISRU. This means either more efficiency or more power from the same 'expected' size of a part. It's slightly better than the standard 1.25m thing.
	@tags = _kerbalism
	@MODEL
	{
		@model = Squad/Parts/FuelTank/mk2FuselageShort/FuselageShortMono
		@texture = mk2FuselageShort, DeepSky/AirlineKuisine/TexturesMk2/processors_kism
	}
	
	MODULE
	{
		name = ProcessController
		resource = _WaterElectrolysis
		title = Water electrolysis
		capacity = 4.29
	}

	MODULE
	{
		name = ProcessController
		resource = _WaterElectrolysisO2Priority
		title = Water electrolysis oxygen priority
		capacity = 4.29
	}

	MODULE
	{
		name = ProcessController
		resource = _WaterElectrolysisH2Priority
		title = Water electrolysis hydrogen priority
		capacity = 4.29
	}

	MODULE
	{
		name = ProcessController
		resource = _Sabatier
		title = Sabatier process LF priority
		capacity = 4.29
	}

	MODULE
	{
		name = ProcessController
		resource = _SabatierH2OPriority
		title = Sabatier process water priority
		capacity = 4.29
	}

	MODULE
	{
		name = ProcessController
		resource = _Haber
		title = Haber process
		capacity = 4.29
	}

	MODULE
	{
		name = ProcessController
		resource = _WasteIncinerator
		title = Waste incinerator
		capacity = 4.29
	}

	MODULE
	{
		name = ProcessController
		resource = _WasteCompressor
		title = Waste compressor
		capacity = 4.29
	}
  
  MODULE
	{
		name = ProcessController
		resource = _Anthraquinone
		title = Anthraquinone process
		capacity = 4.29
	}

	MODULE
	{
		name = ProcessController
		resource = _HydrazineProduction
		title = Hydrazine production
		capacity = 4.29
	}

	MODULE
	{
		name = ProcessController
		resource = _MRE
		title = MRE
		capacity = 4.29
	}

	MODULE
	{
		name = ProcessController
		resource = _SOE
		title = SOE
		capacity = 4.29
	}

	MODULE
	{
		name = ProcessController
		resource = _SCO
		title = SCO
		capacity = 4.29
	}

	MODULE
	{
		name = Configure
		title = Chemical Plant
		slots = 1

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = electronics
				slots = 0
			}
		}

		SETUP
		{
			name = Water Electrolysis
			desc = Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterElectrolysis
			}
		}

		SETUP
		{
			name = Water Electrolysis (O2 priority)
			desc = Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components. If necessary Hydrogen will be vented in order to continue the Oxygen extraction.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterElectrolysisO2Priority
			}
		}

		SETUP
		{
			name = Water Electrolysis (H2 priority)
			desc = Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components. If necessary Oxygen will be vented in order to continue the Hydrogen extraction.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterElectrolysisH2Priority
			}
		}

		SETUP
		{
			name = Sabatier Process (LF priority)
			desc = <b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>LiquidFuel</b>. If needed Water will be vented in order to continue the LiquidFuel extraction.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Sabatier
			}
		}

		SETUP
		{
			name = Sabatier Process (H2O priority)
			desc = <b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>LiquidFuel</b>. If needed LiquidFuel will be vented in order to continue the Water extraction.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SabatierH2OPriority
			}
		}

		SETUP
		{
			name = Haber Process
			desc = Produce <b>Ammonia</b> by <b>Nitrogen</b> fixation.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Haber
			}
		}
		
		SETUP
		{
			name = Waste Incinerator
			desc = Produce <b>CarbonDioxide</b> by combustion of <b>Waste</b> with <b>Oxygen</b>. Includes a small exhaust turbine generator.
			tech = precisionEngineering

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteIncinerator
			}
		}

		SETUP
		{
			name = Waste Compressor
			desc = Compact <b>Waste</b> to the density of lead, for use in radiation shielding.
			tech = precisionEngineering

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteCompressor
			}
		}

		SETUP
		{
			name = Anthraquinone Process
			desc = Synthesize <b>Oxidizer</b> using a redox of <b>Oxygen</b> and <b>Hydrogen</b>.
			tech = advScienceTech

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Anthraquinone
			}
		}

		SETUP
		{
			name = Hydrazine Production
			desc = <b>Oxidizer</b> and <b>Ammonia</b> react to produce <b>MonoPropellant</b> and <b>Water</b>.
			tech = advScienceTech

			MODULE
			{
			type = ProcessController
			id_field = resource
			id_value = _HydrazineProduction
			}
		}

		SETUP
		{
		name = Solid Oxide Electrolysis
		desc = Transform <b>CarbonDioxide</b> into <b>Oxygen</b>.
		tech = experimentalScience

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SOE
			}
		}

		SETUP
		{
			name = Molten Regolith Electrolysis
			desc = Extract <b>Oxygen</b> out of <b>Ore</b>.
			tech = experimentalScience

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MRE
			}
		}

		SETUP
		{
			name = Selective Catalytic Oxidation
			desc = <b>Ammonia</b> and <b>Oxygen</b> react with a hydrotalcite-like catalyst to produce <b>Nitrogen</b> and <b>Water</b>.
			tech = experimentalScience

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SCO
			}
		}

		MODULE:NEEDS[FeatureReliability]
		{
			name = Reliability
			type = ProcessController
			title = Chemical Plant
			repair = Engineer
			mtbf = 72576000 // 8y
			extra_cost = 1.0
			extra_mass = 0.2
		}
	}
}

// Processor C: Chemical Plant (ISRU) slot upgrade
@PART[dsak_proc_c]:NEEDS[Kerbalism,ProfileDefault]:FOR[AirlineKuisine]
{ @MODULE[Configure] { @UPGRADES { @UPGRADE { @slots = #$../../slots$
      @slots += 1 } } }
}
