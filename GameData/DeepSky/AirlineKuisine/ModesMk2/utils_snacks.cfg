//Cabin short: Snacks & Soil
@PART[dsak_cabin]:NEEDS[SnacksUtils]
{
	@MODEL
	{
		@texture,0 = mk2CrewCabin, DeepSky/AirlineKuisine/TexturesMk2/cabin_snx
	}
	
	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 200
	}
	MODULE:NEEDS[SnacksFreshAir]
	{
		name = SnacksConverter
		ConverterName = Air Scrubber
		StartActionName = Start Air Scrubber
		StopActionName = Stop Air Scrubber
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		INPUT_RESOURCE
		{
			ResourceName = StaleAir
			Ratio = 0.00074
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.4
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = FreshAir
			Ratio = 0.000296
			FlowMode = ALL_VESSEL
		}
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 64
	}
	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Entertainment Center
		StartActionName = Start Entertainment
		StopActionName = Stop Entertainment
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		minimumCrew = 1
		requiresHomeConnection = true
		conditionSummary = Relaxing
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.4
			FlowMode = ALL_VESSEL
		}

		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress
			AmountPerDay = 2
		}
	}
	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Stargazing
		StartActionName = Start Stargazing
		StopActionName = Stop Stargazing
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		minimumCrew = 1
		requiresHomeConnection = false
		conditionSummary = Stargazing

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.05
			FlowMode = ALL_VESSEL
		}
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress
			AmountPerDay = 1.5
		}
	}
}

@PART[dsak_cabin]:NEEDS[SnacksUtils]:AFTER[SnacksUtils]
{
	@RESOURCE[Snacks]
	{
		@amount *= 2
		@maxAmount *= 2
	}
}

//Cabin long: Snacks, Soil, Recycler
@PART[dsak_cabin2]:NEEDS[SnacksUtils]
{
	@MODEL
	{
		@texture,0 = mk2CrewCabin, DeepSky/AirlineKuisine/TexturesMk2/cabin2_snx
	}
	
	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 200
	}
	
	MODULE
	{
		name = SoilRecycler
		ConverterName = Soil Recycler
		StartActionName = Start Soil Recycler
		StopActionName = Stop Soil Recycler
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		RecyclerCapacity = 1
	 
		INPUT_RESOURCE
		{
			ResourceName = Soil
			Ratio = 0.000034723
			FlowMode = ALL_VESSEL
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 12
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}
	MODULE:NEEDS[SnacksFreshAir]
	{
		name = SnacksConverter
		ConverterName = Air Scrubber
		StartActionName = Start Air Scrubber
		StopActionName = Stop Air Scrubber
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		INPUT_RESOURCE
		{
			ResourceName = StaleAir
			Ratio = 0.00074
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.4
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = FreshAir
			Ratio = 0.000296
			FlowMode = ALL_VESSEL
		}
	}
	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 64
	}
	
	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Entertainment Center
		StartActionName = Start Entertainment
		StopActionName = Stop Entertainment
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		minimumCrew = 1
		requiresHomeConnection = true
		conditionSummary = Relaxing
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.4
			FlowMode = ALL_VESSEL
		}

		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress
			AmountPerDay = 2
		}
	}
}

@PART[dsak_cabin2]:AFTER[SnacksUtils]
{
	@RESOURCE[Snacks]
	{
		@amount *= 5
		@maxAmount *= 5
	}
}

//Processor A: Snack Grinder
@PART[dsak_proc_a]:NEEDS[SnacksUtils]
{
	@entryCost = 13300
	@cost = 3310
	@title = DS Mk2 Snack Grinder
	@description = After sufficient investigation into how the folks at Wild Blue integrate food-processing machinery into the Hitchhiker can it was deduced that merely realigning and condensing existing parts to have them fit in a Mk2 shell was enough of a design challenge. Fortunately, the homework was also put in to prevent loss of efficiency from this condensation.
	@tags = mk2 snacks snack grinder cck-lifesupport
	@MODEL
	{
		@model = Squad/Parts/FuelTank/mk2FuselageShort/FuselageShortLFO
		@texture = mk2FuselageShort, DeepSky/AirlineKuisine/TexturesMk2/processors_snx
	}
	
	MODULE
	{
		name = SnackProcessor
		ConverterName = Snack Processor
		StartActionName = Start Snack Processor
		StopActionName = Stop Snack Processor
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		 
		//Ore masses 0.01 metric tons per unit
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 0.0002
			FlowMode = STAGE_PRIORITY_FLOW
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 30
		}

		//Snacks masses 0.001 metric tons per unit
		//1 Ore = 5 Snacks
		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.001
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	RESOURCE
	{
		name = Snacks
		amount = 200
		maxAmount = 200
	}
}

//Processor B: Greenhouse
@PART[dsak_proc_b]:NEEDS[SnacksUtils]
{
	@entryCost = 6000
	@cost = 2000
	@title = DS Mk2 Prairie Greenhouse
	@description = With experience like ours, a heap of coffee and snacks, and a few locked doors we were able to produce a fuel cell that consumes Ore! ...Don't tell the USI people.
	@tags = mk2 cck-lifesupport
	@MODEL
	{
		@model = Squad/Parts/FuelTank/mk2FuselageShort/FuselageShortLiquid
		@texture = mk2FuselageShort, DeepSky/AirlineKuisine/TexturesMk2/processors_snx
	}
	
	MODULE:NEEDS[Pathfinder]
	{
		name = WBIMultipurposeHab
		enableLogging = True
		showGUI = True
		isInflatable = False

		//Name of inflatable animation
		animationName = 
		startEventGUIName = Assemble
		endEventGUIName = Disassemble
		
		capacityFactor = 1.0

		//Crew capacity when inflated
		inflatedCrewCapacity = 0
		fieldReconfigurable = true

		//name of the template nodes to use
		templateNodes = GREENHOUSE
		defaultTemplate = Prairie
		
		logoPanelTransforms = 
		decalsVisible = False

		//If the part has a KIS container, this is the base and max amount
		baseStorage = 0.01
		maxStorage = 1

		partToolTipTitle = Your First Industrial Plant
		partToolTip = This module is the cornerstone for all your industrial needs. It is a captain of industry; resources created in the module's various configurations will benefit from metallurgic analysis.
		opsViewTitle = Choza Operations

		//Snacks
		resourcesToKeep:NEEDS[SnacksUtils] = Snacks
		//Kerbalism
		resourcesToKeep:NEEDS[Kerbalism] = Shielding;Food;Oxygen
		//TAC-LS
		resourcesToKeep:NEEDS[TacLifeSupport] = Food;Oxygen;Water;CarbonDioxide;Waste;WasteWater
		//USI-LS
		resourcesToKeep:NEEDS[USILifeSupport] = Supplies;Mulch;ReplacementParts
	}
}

//Processor C: ISRU
@PART[dsak_proc_c]:NEEDS[SnacksUtils]
{
	@entryCost = 18300
	@cost = 2270
	@title = DS Mk2 Convert-O-Tron + OmniWorks
	@description = Although Deep Sky's engineers were unable to raise efficiency while condensing the modules for the snack grinder, they were able to raise it for the small Convert-O-Tron by revising the materials, the fabrication process and expanding the modules to fill the Mk2 aeroshell.
	@tags = mk2 isru converter cck-lifesupport
	@MODEL
	{
		@model = Squad/Parts/FuelTank/mk2FuselageShort/FuselageShortMono
		@texture = mk2FuselageShort, DeepSky/AirlineKuisine/TexturesMk2/processors_snx
	}
	
	MODULE:NEEDS[Pathfinder]
	{
		name = WBIMultiConverter
		enableLogging = True

		//Determines if the module allows in-field reconfiguring
		fieldReconfigurable = True

		//Require a confirmation click before changing resources
		confirmResourceSwitch = True

		//Determines whether or not to show the context menu GUI
		showGUI = True

		//Short name of the default module template.
		//This is used when selecting the part in the editor.
		//User will then right-click on the module to change its type.
		defaultTemplate = Prospector

		//name of the template nodes to use
		templateNodes = DSAK_ISRU;DSAK_ISRUMk2

		//Some containers don't hold as much resources as the template specifies, while others hold more.
		//Since the resource templates specify base amounts, the capacity factor specifies a multiplier to
		//factor into the resource amounts.
		capacityFactor = 1 // 0.14
	}
	MODULE:NEEDS[!Pathfinder]
	{
		name = WBIOmniConverter
		managedName = OmniConverter 1
		templateNodes = OMNICONVERTER
		templateTags = lab
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 300
		ConverterName = OmniConverter 1
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		showOpsView = true
	}
	MODULE:NEEDS[!Pathfinder]
	{
		name = WBIOmniConverter
		managedName = OmniConverter 2
		templateNodes = OMNICONVERTER
		templateTags = lab
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 300
		ConverterName = OmniConverter 1
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		showOpsView = true
	}
	
	MODULE:NEEDS[Pathfinder]
	{
		name = WBIGoldStrikeDrill
		HarvesterType = 0
		Efficiency = 0.3
		ResourceName = Ore
		ConverterName = Ore
		StartActionName = Start Ore
		StopActionName = Stop Ore
		// ImpactTransform = ImpactTransform
		ImpactRange = 5
		AutoShutdown = true
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		Specialty = Engineer
		EfficiencyBonus = 1
		GeneratesHeat = false
	}

	MODULE:NEEDS[Pathfinder]
	{
		name = WBIDrillSwitcher
		requiredSkill = DrillSkill
		requiredResource = Equipment
		reconfigureCost = 200
	}
	
	MODULE:NEEDS[BARIS]
	{
		name = ModuleQualityControl
		quality = 20
		mtbf = 720
		guiVisible = false

		showUpgradesInModuleInfo = true
		UPGRADES
		{
			UPGRADE
			{
				name__ = PathfinderQuality1
				description__ = Quality: 75; MTBF: 800hrs
				techRequired__ = advMetalWorks
				mtbf = 800
				quality = 25
			}
			UPGRADE
			{
				name__ = PathfinderQuality2
				description__ = Quality: 100; MTBF: 900hrs
				techRequired__ = metaMaterials
				mtbf = 900
				quality = 30
			}
		}
	}

	MODULE
	{
		name = WBIResourceDistributor
		resourceBlacklist = ReplacementParts;GeoEnergy
	}

	MODULE
	{
		name = WBIEfficiencyMonitor
		efficiencyType = industry
	}
}