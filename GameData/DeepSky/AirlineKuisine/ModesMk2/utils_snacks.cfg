//Cabin short: Snacks & Soil
@PART[dsak_cabin]:NEEDS[Snacks]
{
	@category = Utility
	
	-MODEL {}
	MODEL
	{
		model = Squad/Parts/Utility/mk2CrewCabin/model
		texture = mk2CrewCabin, DeepSky/AirlineKuisine/TexturesMk2/cabin_snx
		texture = mk2CrewCabin_LUM, DeepSky/AirlineKuisine/TexturesMk2/cabin_LUM
	}
	
	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 200
	}
}

@PART[dsak_cabin]:NEEDS[Snacks]:AFTER[Snacks]
{
	@RESOURCE[Snacks]
	{
		@amount *= 2
		@maxAmount *= 2
	}
}

//Cabin long: Snacks, Soil, Recycler
@PART[dsak_cabin2]:NEEDS[Snacks]
{
	@category = Utility
	
	-MODEL {}
	MODEL
	{
		model = DeepSky/AirlineKuisine/BorrowedParts/M2Xlab/M2Xlab
		texture = mk2CrewCabin, DeepSky/AirlineKuisine/TexturesMk2/cabin2_snx
		texture = mk2CrewCabin_LUM, DeepSky/AirlineKuisine/TexturesMk2/cabin2_LUM
	}
	
	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 200
	}
	
	MODULE
	{
		name = SoilRecycler
		ConverterName = Soil Recycler
		StartActionName = Start Soil Recycler
		StopActionName = Stop Soil Recycler
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		SpecialistEfficiencyFactor = 0.1
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		RecyclerCapacity = 4
	 
		INPUT_RESOURCE
		{
			ResourceName = Soil
			Ratio = 0.000034723
			FlowMode = ALL_VESSEL
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 12
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}
}

@PART[dsak_cabin2]:NEEDS[Snacks]:AFTER[Snacks]
{
	@RESOURCE[Snacks]
	{
		@amount *= 5
		@maxAmount *= 5
	}
}

//Processor A: Snack Grinder
@PART[dsak_proc_a]:NEEDS[Snacks]
{
	@entryCost = 13300
	@cost = 3310
	@title = Mk2 Snack Grinder
	@description = After sufficient investigation into how the folks at Wild Blue integrate food-processing machinery into the Hitchhiker can it was deduced that merely realigning and condensing existing parts to have them fit in a Mk2 shell was enough of a design challenge. Fortunately, the homework was also put in to prevent loss of efficiency from this condensation.
	@category = Utility
	@tags = mk2 snacks snack grinder
	@MODEL
	{
		@model = Squad/Parts/FuelTank/mk2FuselageShort/FuselageShortLFO
		@texture = mk2FuselageShort, DeepSky/AirlineKuisine/TexturesMk2/processors_snx
	}
	
	MODULE
	{
		name = SnackProcessor
		ConverterName = Snack Processor
		StartActionName = Start Snack Processor
		StopActionName = Stop Snack Processor
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		SpecialistEfficiencyFactor = 0.1
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		 
		//Ore masses 0.01 metric tons per unit
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 0.0002
			FlowMode = STAGE_PRIORITY_FLOW
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 30
		}

		//Snacks masses 0.001 metric tons per unit
		//1 Ore = 5 Snacks
		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.001
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	RESOURCE[Snacks]
	{
		amount = 200
		maxAmount = 200
	}
}

//Processor B: Fuel Cell
@PART[dsak_proc_b]:NEEDS[Snacks]
{
	@entryCost = 6000
	@cost = 2000
	@title = Mk2 Solid Fuel Cell Array
	@description = With experience like ours, a heap of coffee and snacks, and a few locked doors we were able to produce a fuel cell that consumes Ore! ...Don't tell the USI people.
	@category = Electrical
	@tags = mk2 ore fuel cell array
	@MODEL
	{
		@model = Squad/Parts/FuelTank/mk2FuselageShort/FuselageShortLiquid
		@texture = mk2FuselageShort, DeepSky/AirlineKuisine/TexturesMk2/processors_snx
	}
	
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Fuel Cell
		StartActionName = Start Fuel Cell
		StopActionName = Stop Fuel Cell
		ToggleActionName = Toggle Fuel Cell
		FillAmount = 0.95
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false

		 
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 0.05
			FlowMode = STAGE_PRIORITY_FLOW
  		}
		
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 24
			DumpExcess = false
		}
	}
	
	RESOURCE
	{
		name = ElectricCharge
		amount = 1000
		maxAmount = 1000
	}
}

//Processor C: ISRU
@PART[dsak_proc_c]:NEEDS[Snacks]
{
	@entryCost = 18300
	@cost = 2270
	@title = Mk2 Convert-O-Tron
	@description = Although Deep Sky's engineers were unable to raise efficiency while condensing the modules for the snack grinder, they were able to raise it for the small Convert-O-Tron by revising the materials, the fabrication process and expanding the modules to fill the Mk2 aeroshell.
	@category = Utility
	@tags = mk2 isru converter
	@MODEL
	{
		@model = Squad/Parts/FuelTank/mk2FuselageShort/FuselageShortMono
		@texture = mk2FuselageShort, DeepSky/AirlineKuisine/TexturesMk2/processors_snx
	}
	
	MODULE
	{
		name = ModuleOverheatDisplay
	}

	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Lf+Ox
		StartActionName = Start ISRU [Lf+Ox]
		StopActionName = Stop ISRU [Lf+Ox]	 
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0 60000
			key = 750 30000
			key = 1000 6000
			key = 1250 2000	
			key = 2000 80	
			key = 4000 0
		}				
		GeneratesHeat = true
		DefaultShutoffTemp = .8
		ThermalEfficiency 
		{
			key = 0 0 0 0
			key = 500 0.1 0 0
			key = 1000 1.0 0 0
			key = 1250 0.1 0 0
			key = 3000 0 0 0 
		}


		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 0.6

		 
		 INPUT_RESOURCE
		 {
			ResourceName = Ore
			Ratio = 0.4
			FlowMode = STAGE_PRIORITY_FLOW
  		 }
		 INPUT_RESOURCE
		 {
			ResourceName = ElectricCharge
			Ratio = 30
		 }
		 OUTPUT_RESOURCE
		 {
			ResourceName = LiquidFuel
			Ratio = 0.36
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		 }
		 OUTPUT_RESOURCE
		 {
			ResourceName = Oxidizer
			Ratio = 0.44
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		 }
	}

	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Monoprop
		StartActionName = Start ISRU [Monoprop]
		StopActionName = Stop ISRU [Monoprop]
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0 60000
			key = 750 30000
			key = 1000 6000
			key = 1250 2000	
			key = 2000 80	
			key = 4000 0
		}				
		GeneratesHeat = true
		DefaultShutoffTemp = .8
		ThermalEfficiency 
		{
			key = 0 0 0 0
			key = 500 0.1 0 0
			key = 1000 1.0 0 0
			key = 1250 0.1 0 0
			key = 3000 0 0 0 
		}

		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 0.6

		 
		 INPUT_RESOURCE
		 {
			ResourceName = Ore
			Ratio = 0.4
		 }
		 INPUT_RESOURCE
		 {
			ResourceName = ElectricCharge
			Ratio = 30
		 }
		 OUTPUT_RESOURCE
		 {
			ResourceName = MonoPropellant
			Ratio = 0.8
			DumpExcess = false
		 }
	}


	MODULE
	{
		 name = ModuleResourceConverter
		 ConverterName = LiquidFuel
		 StartActionName = Start ISRU [LqdFuel]
		 StopActionName = Stop ISRU [LqdFuel]
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0 60000
			key = 750 30000
			key = 1000 6000
			key = 1250 2000	
			key = 2000 80	
			key = 4000 0
		}				
		GeneratesHeat = true
		DefaultShutoffTemp = .8
		ThermalEfficiency 
		{
			key = 0 0 0 0
			key = 500 0.1 0 0
			key = 1000 1.0 0 0
			key = 1250 0.1 0 0
			key = 3000 0 0 0 
		}
		
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 0.6

		 
		 INPUT_RESOURCE
		 {
			ResourceName = Ore
			Ratio = 0.36
			FlowMode = STAGE_PRIORITY_FLOW
  		 }
		 INPUT_RESOURCE
		 {
			ResourceName = ElectricCharge
			Ratio = 30
		 }
		 OUTPUT_RESOURCE
		 {
			ResourceName = LiquidFuel
			Ratio = 0.72
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		 }
	}

	
	MODULE
	{
		 name = ModuleResourceConverter
		 ConverterName = Oxidizer
		 StartActionName = Start ISRU [Ox]
		 StopActionName = Stop ISRU [Ox]
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0 60000
			key = 750 30000
			key = 1000 6000
			key = 1250 2000	
			key = 2000 80	
			key = 4000 0
		}				
		GeneratesHeat = true
		DefaultShutoffTemp = .8
		ThermalEfficiency 
		{
			key = 0 0 0 0
			key = 500 0.1 0 0
			key = 1000 1.0 0 0
			key = 1250 0.1 0 0
			key = 3000 0 0 0 
		}

		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill

		EfficiencyBonus = 0.6

		 
		 INPUT_RESOURCE
		 {
			ResourceName = Ore
			Ratio = 0.44
			FlowMode = STAGE_PRIORITY_FLOW
  		 }
		 INPUT_RESOURCE
		 {
			ResourceName = ElectricCharge
			Ratio = 30
		 }
		 OUTPUT_RESOURCE
		 {
			ResourceName = Oxidizer
			Ratio = 0.88
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		 }
	}
}