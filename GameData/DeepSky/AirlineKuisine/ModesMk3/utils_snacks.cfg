//Cabin: Snacks, Soil, Recycler
@PART[dsak_cabin3]:NEEDS[SnacksUtils]
{
	@entryCost *= 1.05
	@cost *= 1.6
	@mass *= 0.85
	!MODEL {}
	MODEL
	{
		model = Squad/Parts/FuelTank/mk3Fuselage/CREW
		texture = Mk3Fuselage, DeepSky/AirlineKuisine/TexturesMk3/mk3_core_snx
		texture = Mk3Fuselage_LUM, DeepSky/AirlineKuisine/TexturesMk3/Mk3Fuselage_LUM
	}
	MODULE
	{
		name = WBIMultipurposeHab
		enableLogging = True
		showGUI = True
		isInflatable = False
		capacityFactor = 1.0
		fieldReconfigurable = true
		templateNodes = PATH_HABITATION
		defaultTemplate = GeoLab

		logoPanelTransforms = 
		decalsVisible = false

		//If the part has a KIS container, this is the base and max amount
		baseStorage = 2000
		maxStorage = 4000

		partToolTipTitle = Your First Habitat
		partToolTip = Want to use the Ponderosa for more than one purpose? With a feat of engineering, you can change it in the field. For a price... The cornerstone of your habitation needs, resources created in one of the module's many configurations will benefit from soil analysis.
		opsViewTitle = Ponderosa Operations

		//Snacks
		resourcesToKeep:NEEDS[SnacksUtils] = ElectricCharge;Snacks

		//Kerbalism
		resourcesToKeep:NEEDS[Kerbalism] = ElectricCharge;Shielding;Food;Oxygen

		//TAC-LS
		resourcesToKeep:NEEDS[TacLifeSupport] = ElectricCharge;Food;Oxygen;Water;CarbonDioxide;Waste;WasteWater

		//USI-LS
		resourcesToKeep:NEEDS[USILifeSupport] = ElectricCharge;Supplies;Mulch;ReplacementParts
	}
	
	MODULE:NEEDS[!Pathfinder]
	{
		name = SoilRecycler
		ConverterName = Soil Recycler
		StartActionName = Start Soil Recycler
		StopActionName = Stop Soil Recycler
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		RecyclerCapacity = 1 // 8
	 
		INPUT_RESOURCE
		{
			ResourceName = Soil
			Ratio = 0.000034723
			FlowMode = ALL_VESSEL
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 12
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}

	%RESOURCE[Soil]
	{
		%amount = 0
		%maxAmount = 200
	}
	
	MODULE:NEEDS[SnacksFreshAir]
	{
		name = SnacksConverter
		ConverterName = Air Scrubber
		StartActionName = Start Air Scrubber
		StopActionName = Stop Air Scrubber
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		INPUT_RESOURCE
		{
			ResourceName = StaleAir
			Ratio = 0.00296
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 1.6
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = FreshAir
			Ratio = 0.001184
			FlowMode = ALL_VESSEL
		}
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 256
	}
	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Entertainment Center
		StartActionName = Start Entertainment
		StopActionName = Stop Entertainment
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		minimumCrew = 1
		requiresHomeConnection = true
		conditionSummary = Relaxing

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 1.6
			FlowMode = ALL_VESSEL
		}
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress
			AmountPerDay = 2
		}
	}
}

//Processor A: Snack Grinder
@PART[dsak_proc_3a]:NEEDS[SnacksUtils]
{
	@entryCost *= 1.2
	@cost *= 1.8
	@mass *= 1.4
	@title = DS Mk3 Snack Grinder
	@description = Someone at Deep Sky had the crazy idea to put Big Ben to work at something other than telling time. He was promptly stared down by everyone else and made to sit in a corner. But after some time to reflect, it was deemed a very cool suggestion. Somehow the design scaled incredibly well and this machine boasts the ability to churn out snacks at 5x the capacity of its Mk2 size relative.
	@tags = mk3 snack grinder cck-lifesupport
	@MODEL
	{
		@texture = Mk3Fuselage, DeepSky/AirlineKuisine/TexturesMk3/mk3proc_a_snx
	}
	
	MODULE
	{
		name = SnackProcessor
		ConverterName = Snack Processor
		StartActionName = Start Snack Processor
		StopActionName = Stop Snack Processor
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		 
		//Ore masses 0.01 metric tons per unit
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 0.001
			FlowMode = STAGE_PRIORITY_FLOW
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 150
		}

		//Snacks masses 0.001 metric tons per unit
		//1 Ore = 5 Snacks, not all of the ore is usable...
		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.005
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	%RESOURCE[Snacks]
	{
		%amount = 640
		%maxAmount = 640
	}
}

//Processor B: Hacienda
@PART[dsak_proc_3b]:NEEDS[SnacksUtils]
{
	@entryCost *= 1.1
	@cost *= 1.4
	@mass *= 1.15
	@title = DS Mk3 MPH Estudio
	@description = This inline industrial facility packs the features of the Hacienda IMF, but has limited comparable performance. Currently it cannot hold a crew.
	@tags = mk3 cck-lifesupport
	@MODEL
	{
		@texture = Mk3Fuselage, DeepSky/AirlineKuisine/TexturesMk3/mk3proc_b_snx
	}
	
	MODULE:NEEDS[Pathfinder]
	{
		name = WBIMultipurposeHab
		enableLogging = True
		showGUI = True
		isInflatable = False

		//Name of inflatable animation
		animationName = 
		startEventGUIName = Assemble
		endEventGUIName = Disassemble
		
		capacityFactor = 1.0

		//Crew capacity when inflated
		inflatedCrewCapacity = 2
		fieldReconfigurable = true

		//name of the template nodes to use
		templateNodes = PATH_INDUSTRY;HOTSPRINGS
		defaultTemplate = CropWorks
		
		logoPanelTransforms = 
		decalsVisible = False

		//If the part has a KIS container, this is the base and max amount
		baseStorage = 0.01
		maxStorage = 1

		partToolTipTitle = Your First Industrial Plant
		partToolTip = This module is the cornerstone for all your industrial needs. It is a captain of industry; resources created in the module's various configurations will benefit from metallurgic analysis.
		opsViewTitle = Estudio Operations

		//Snacks
		resourcesToKeep:NEEDS[SnacksUtils] = Snacks
		//Kerbalism
		resourcesToKeep:NEEDS[Kerbalism] = Shielding;Food;Oxygen
		//TAC-LS
		resourcesToKeep:NEEDS[TacLifeSupport] = Food;Oxygen;Water;CarbonDioxide;Waste;WasteWater
		//USI-LS
		resourcesToKeep:NEEDS[USILifeSupport] = Supplies;Mulch;ReplacementParts
	}
	
	MODULE
	{
		name = WBIOmniConverter

		//Name of the button displayed in the OpsManager
		managedName = OmniConverter 1

		//Name of the templates that the omni converter can use
		templateNodes = OMNICONVERTER

		//Tags to further refine the allowed converters
		templateTags = hab;lab

		//Base efficiency based on a 1000-liter converter volume.
		//Smaller converters have lower efficiency while bigger converters have larger efficiencies.
		//Example: a 500-liter converter has a BaseEfficiency of 0.5
		BaseEfficiency = 1.0

		//Reconfigure skill
		reconfigureSkill = ConverterSkill

		//Resource required to configure the converter
		requiredResource = Equipment

		//Amount of the required resource needed to reconfigure the converter
		requiredAmount = 150

		//Standard ModuleResourceConverter stuff
		ConverterName = OmniConverter 1
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		showOpsView = true
	}
	MODULE
	{
		name = WBIOmniConverter
		managedName = OmniConverter 2
		templateNodes = OMNICONVERTER
		templateTags = hab;lab
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 150
		ConverterName = OmniConverter 2
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		showOpsView = true
	}
	MODULE
	{
		name = WBIOmniStorage
		storageVolume = 400
		accountForSwitcherCapacity = true
		reconfigureSkill = ConverterSkill
		reconfigureRank = 1
		requiredResource = Equipment
		requiredAmount = 0
	}
	
	MODULE:NEEDS[BARIS]
	{
		name = ModuleQualityControl
		quality = 20
		mtbf = 720
		guiVisible = false

		showUpgradesInModuleInfo = true
		UPGRADES
		{
			UPGRADE
			{
				name__ = PathfinderQuality1
				description__ = Quality: 75; MTBF: 800hrs
				techRequired__ = advMetalWorks
				mtbf = 800
				quality = 25
			}
			UPGRADE
			{
				name__ = PathfinderQuality2
				description__ = Quality: 100; MTBF: 900hrs
				techRequired__ = metaMaterials
				mtbf = 900
				quality = 30
			}
		}
	}

	MODULE
	{
		name = WBIResourceDistributor
		resourceBlacklist = ReplacementParts;GeoEnergy
	}

	MODULE
	{
		name = WBIEfficiencyMonitor
		efficiencyType = industry
	}
}

//Processor C: ISRU
@PART[dsak_proc_3c]:NEEDS[SnacksUtils]
{
	@entryCost *= 1.2
	@cost *= 1.55
	@mass *= 1.5
	@title = DS Mk3 Convert-O-Tron + OmniWorks
	@description = Building upon the revision process that led to the Mk2 Convert-O-Tron, this version was easily produced. It operates about 6x as well but has not been compared to the 2.5m Convert-O-Tron.
	@tags = mk3 isru converter cck-lifesupport
	@MODEL
	{
		@texture = Mk3Fuselage, DeepSky/AirlineKuisine/TexturesMk3/mk3proc_c_snx
	}
	
	MODULE:NEEDS[Pathfinder]
	{
		name = WBIMultiConverter
		enableLogging = True

		//Determines if the module allows in-field reconfiguring
		fieldReconfigurable = True

		//Require a confirmation click before changing resources
		confirmResourceSwitch = True

		//Determines whether or not to show the context menu GUI
		showGUI = True

		//Short name of the default module template.
		//This is used when selecting the part in the editor.
		//User will then right-click on the module to change its type.
		defaultTemplate = Prospector

		//name of the template nodes to use
		templateNodes = DSAK_ISRU;DSAK_ISRUMk3

		//Some containers don't hold as much resources as the template specifies, while others hold more.
		//Since the resource templates specify base amounts, the capacity factor specifies a multiplier to
		//factor into the resource amounts.
		capacityFactor = 1
	}
	
	MODULE:NEEDS[!Pathfinder]
	{
		name = WBIOmniConverter

		//Name of the button displayed in the OpsManager
		managedName = OmniConverter 1

		//Name of the templates that the omni converter can use
		templateNodes = OMNICONVERTER

		//Tags to further refine the allowed converters
		templateTags = hab;lab

		//Base efficiency based on a 1000-liter converter volume.
		//Smaller converters have lower efficiency while bigger converters have larger efficiencies.
		//Example: a 500-liter converter has a BaseEfficiency of 0.5
		BaseEfficiency = 2

		//Reconfigure skill
		reconfigureSkill = ConverterSkill

		//Resource required to configure the converter
		requiredResource = Equipment

		//Amount of the required resource needed to reconfigure the converter
		requiredAmount = 150

		//Standard ModuleResourceConverter stuff
		ConverterName = OmniConverter 1
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		showOpsView = true
	}
	MODULE:NEEDS[!Pathfinder]
	{
		name = WBIOmniConverter
		managedName = OmniConverter 2
		templateNodes = OMNICONVERTER
		templateTags = hab;lab
		BaseEfficiency = 2
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 150
		ConverterName = OmniConverter 2
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		showOpsView = true
	}
	MODULE:NEEDS[!Pathfinder]
	{
		name = WBIOmniConverter
		managedName = OmniConverter 3
		templateNodes = OMNICONVERTER
		templateTags = hab;lab
		BaseEfficiency = 2
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 150
		ConverterName = OmniConverter 3
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		showOpsView = true
	}
	MODULE:NEEDS[!Pathfinder]
	{
		name = WBIOmniConverter
		managedName = OmniConverter 4
		templateNodes = OMNICONVERTER
		templateTags = hab;lab
		BaseEfficiency = 2
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 150
		ConverterName = OmniConverter 4
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		showOpsView = true
	}
	MODULE:NEEDS[!Pathfinder]
	{
		name = WBIOmniConverter
		managedName = OmniConverter 5
		templateNodes = OMNICONVERTER
		templateTags = hab;lab
		BaseEfficiency = 2
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 150
		ConverterName = OmniConverter 5
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		showOpsView = true
	}
	MODULE:NEEDS[!Pathfinder]
	{
		name = WBIOmniConverter
		managedName = OmniConverter 6
		templateNodes = OMNICONVERTER
		templateTags = hab;lab
		BaseEfficiency = 2
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 150
		ConverterName = OmniConverter 6
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		showOpsView = true
	}
	
	MODULE:NEEDS[Pathfinder]
	{
		name = WBIGoldStrikeDrill
		HarvesterType = 0
		Efficiency = 4.5
		ResourceName = Ore
		ConverterName = Ore
		StartActionName = Start Ore
		StopActionName = Stop Ore
		// ImpactTransform = ImpactTransform
		ImpactRange = 5
		AutoShutdown = true
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		Specialty = Engineer
		EfficiencyBonus = 1
		GeneratesHeat = false
	}

	MODULE:NEEDS[Pathfinder]
	{
		name = WBIDrillSwitcher
		requiredSkill = DrillSkill
		requiredResource = Equipment
		reconfigureCost = 200
	}
	MODULE:NEEDS[BARIS]
	{
		name = ModuleQualityControl
		quality = 20
		mtbf = 720
		guiVisible = false

		showUpgradesInModuleInfo = true
		UPGRADES
		{
			UPGRADE
			{
				name__ = PathfinderQuality1
				description__ = Quality: 75; MTBF: 800hrs
				techRequired__ = advMetalWorks
				mtbf = 800
				quality = 25
			}
			UPGRADE
			{
				name__ = PathfinderQuality2
				description__ = Quality: 100; MTBF: 900hrs
				techRequired__ = metaMaterials
				mtbf = 900
				quality = 30
			}
		}
	}

	MODULE
	{
		name = WBIResourceDistributor
		resourceBlacklist = ReplacementParts;GeoEnergy
	}

	MODULE
	{
		name = WBIEfficiencyMonitor
		efficiencyType = industry
	}
}